; Лабораторная работа 6
; Необходимо перекрыть указанный в задании обработчик прерывания и заставить его выполнять нужные действия. 
; В большинстве случаев необходим вызов предыдущего обработчика. 
; Также должна быть отдельная небольшая программа, демонстрирующая работу перекрытого обработчика. 
; Программа должна состоять из резидентной части и инсталяционной части. 
; Первая из них отвечает за работу с перекрываемым прерыванием. 
; А инсталяционная часть должна вызываться при старте программы и отвечать за установку обработчиков.
; Инсталяционная часть должна уметь прочитать командную строку:
;     а) если нам не передается параметров:
;         - если обработчик уже установлен: выдать сообщение об этом и выйти из программы
;         - если обработчик еще не установлен: сохранить адрес старого обработчика, установить наш обработчик, 
;           выйти из программы, оставив активной резидентную часть.
;     б) если нам передается параметр "-d":
;         - если обработчик уже установлен: поставить вместо нашего обработчика заглушку и выйти
;         - если обработчик еще не установлен: выдать сообщение об ошибке и выйти
;     в) любой другой параметр: сообщение об ошибке и выход

; В простейшем случае проверку на активность нашей программы можно реализовать при помощи флага. 
; Для более высокой оценки необходимо использовать мультиплексорное прерывание.


; 2) Перекрыть девятую функцию прерывания 21h таким образом, чтобы в выводимой строке маленькие буквы заменялись большими, 
; а большие на маленькие.

.MODEL Small
.286
.STACK 256
 
INTNO           =       21h             ; номер прерывания
 
.CODE
 
Handler:                                ; обработчик прерывания
                cmp     ah,9
                jne     OldHandler
 
                push    ds
                push    cs
                pop     ds
				;
                lea     dx,Message
                ;
				pushf
                call    dword ptr cs:[OldAddr]
                pop     ds
                iret                    ; выход из прерывания
 
Message         DB      'Hello World!$'
 
OldHandler:     DB      0EAh            ; возвращаем управление прерыванию
OldAddr         DW      ?,?
 
TSREnd          =       $
ORG     $-4
 
;----------------------------------------------------------------------------;
 
Start:
 
                push    ds              ; PSP
 
                mov     ah,49h
                mov     es,ds:[2Ch]
                int     21h             ; освобождаем Environment
 
                mov     ax,3500h + INTNO
                int     21h             ; получаем старый вектор
                mov     OldAddr[0],bx
                mov     OldAddr[2],es
 
                mov     ah,25h
                lea     dx,Handler
                push    cs
                pop     ds              ; DS = CS
                int     21h             ; устанавливаем новый
 
                pop     ax              ; PSP
                push    cs
                pop     dx
                sub     dx,ax
                add     dx,(TSREnd-Handler+15)/16
                mov     ax,3100h
                int     21h             ; остаёмся резидентно
 
END             Start